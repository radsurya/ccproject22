openapi: 3.0.0
info:
  title: Movies API - Movie Service
  description: Cloud Computing Project - Movies API
  contact:
    email: fc57267@alunos.fc.ul.pt
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
servers:
- url: https://virtserver.swaggerhub.com/fc44311/ccproject22/1.0.0
  description: SwaggerHub API Auto Mocking
- url: https://app.swaggerhub.com/apis/fc44311/ccproject22/1.0.0
  description: SwaggerHub API Auto Mocking
tags:
- name: movie
  description: Handle movies information
paths:
  /movies/search:
    get:
      tags:
      - movie
      summary: Search for movies by given search parameters
      operationId: movies_search
      parameters:
      - name: keyword
        in: query
        description: Keyword that should be looked up in movie titles
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: limit
        in: query
        description: Number of movies to return
        required: false
        style: form
        explode: true
        schema:
          type: integer
      responses:
        "200":
          description: Successful operation.
          content:
            aplication/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/movie'
                x-content-type: aplication/json
            aplication/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/movie'
        "400":
          description: Bad request. Invalid arguments.
          content:
            application/json:
              schema:
                type: boolean
                x-content-type: application/json
            application/xml:
              schema:
                type: boolean
      x-openapi-router-controller: swagger_server.controllers.movie_controller
  /movie/get_by_id/{movie_id}:
    get:
      tags:
      - movie
      summary: Get movie information by given movie id
      operationId: movie_get_by_id
      parameters:
      - name: movie_id
        in: path
        description: Id of the movie
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successful operation.
          content:
            aplication/json:
              schema:
                $ref: '#/components/schemas/movie'
            aplication/xml:
              schema:
                $ref: '#/components/schemas/movie'
        "400":
          description: Bad request. Invalid arguments.
          content:
            application/json:
              schema:
                type: boolean
                x-content-type: application/json
            application/xml:
              schema:
                type: boolean
      x-openapi-router-controller: swagger_server.controllers.movie_controller
components:
  schemas:
    movie:
      type: object
      properties:
        movie_id:
          type: string
        movie_title:
          type: string
        movie_release_year:
          type: integer
        movie_url:
          type: string
        movie_title_language:
          type: string
        movie_popularity:
          type: integer
        movie_image_url:
          type: string
        director_id:
          type: string
        director_name:
          type: string
        director_url:
          type: string
        average_rating:
          type: number
      example:
        movie_id: movie_id
        movie_title: movie_title
        movie_release_year: 2022
        movie_url: movie_url
        movie_title_language: en
        movie_popularity: 0
        movie_image_url: movie_image_url
        director_id: director_id
        director_name: director_name
        director_url: director_url
        average_rating: 0

